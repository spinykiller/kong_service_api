name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_DATABASE: servicesdb
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: app
          MYSQL_PASSWORD: app
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u app -papp"
          --health-interval=5s --health-timeout=5s --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install tools
        run: |
          go install github.com/pressly/goose/v3/cmd/goose@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install mvdan.cc/gofumpt@latest
          go install github.com/swaggo/swag/cmd/swag@v1.16.3

      - name: Wait for MySQL
        run: |
          for i in {1..60}; do
            mysqladmin ping -h 127.0.0.1 -u app -papp && break
            sleep 2
          done

      - name: Run migrations
        env:
          DB_DSN: app:app@tcp(127.0.0.1:3306)/servicesdb?parseTime=true&multiStatements=true
        run: |
          goose -dir ./migrations mysql "$DB_DSN" up

      - name: Create test database
        run: |
          mysql -h 127.0.0.1 -u app -papp -e "CREATE DATABASE IF NOT EXISTS servicesdb_test;"
          goose -dir ./migrations mysql "app:app@tcp(127.0.0.1:3306)/servicesdb_test?parseTime=true&multiStatements=true" up

      - name: Generate Swagger docs
        run: swag init -g cmd/api/main.go -o docs

      - name: Lint
        run: golangci-lint run

      - name: Test
        env:
          TEST_MYSQL_DSN: app:app@tcp(127.0.0.1:3306)/servicesdb_test?parseTime=true&charset=utf8mb4&collation=utf8mb4_0900_ai_ci
        run: go test -race ./...

  docker-image:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/services-api

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/docker/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
